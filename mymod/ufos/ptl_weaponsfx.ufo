// See the wiki page
//   http://ufoai.org/wiki/index.php/UFO-Scripts/ptl_%2A.ufo#Datatypes
// for the description of the particle language

// ==================
// BOLTER EFFECTS
// ==================

//(old bolter effect)
//particle bolter
//{
//	init
//	{
//		image  "sfx/weapons/bolt"
//		blend  add
//		style  beam
//		thinkfade  out
//		size	"0 2"
//		tps    4.0
//	}
//	think { kill }
//}

particle bolter
{
	init
	{
		image  "sfx/weapons/bolt"
		tps    60
		style  axis
		blend  add
		offset "0 -16 0"
		size   "30 15"
		lightcolor "1 1 1"
		lightintensity 0.2
	}
	think
	{
		spawn bolter_trail
	}
}

particle bolter_trail
{
	init
	{
		image  "sfx/weapons/muzzleplasmaspiral"
		blend  add
		style  axis
		thinkfade  out
		angles "90 0 0"
		v      "0 0 0"
		tps    3
	}
	run
	{

		push   pos "40 40"
		mul    *t
		add    pos "10 10"
		pop    *size

		push   *color
		mul    float .2
		pop    *color

	}
	think { kill }
}

particle bolterImpact
{
	init
	{
		image  "sfx/smoke"
		blend  add
		style  facing
		thinkfade  sin		// fade the think function with a sinus function
		size   "20 20"

		push   *v			// push velocity onto the stack
		mul    float 5.0	// multiply the value on the stack (velocity)
		kpop   *v			// write it back into particle structure but keep it on the stack
		add    *s			// add the current position to stack (new velocity)
		pop    *s			// write it back into particle position
		tps    1.0

		push   int 10		// push the value onto the stack
		nspawn bolterFragment	// spawn that many bolterCannonade particles as the current value on the stack tells us
	}
	run
	{
		push *color
		mul  float 0.5
		pop  *color
	}
	think { kill }
}

particle bolterFragment
{
	init
	{
		image  "sfx/spark"
		blend  add
		style  facing
		thinkfade  out
		size   "2 2"

		push   *v			// push the velocity onto the stack
		rand   float 28.0	// get a random value between 0 and 28
		add    float 3.0	// ensure the value is at least 3
		mul    #			// multiply the random value (which is at least 3) with the current stack value (velocity)
		crand  vector "15 15 15"	// get a random vector between -15 and 15
		add    #			// add this to the stack value (velocity)
		pop    *v			// write it back into the particle structure

		crand  vector "5 5 5"	// get a random value between -5 and 5
		add    *s		// add the current world position to the random value
		pop    *s		// write the stack value (world pos + random value) back into the particle structure

		rand   float 1.3	// get a random value between 0 and 1.3
		add    float 1.2	// ensure it is at least 1.2
		pop    *tps			// write this value into the think per second particle structure
	}
	think { kill }
}

// ==================
// BULLET EFFECTS
// ==================

//(old bullet effect)
//particle bullet
//{
//	init
//	{
//		image  "sfx/bullet"
//		blend  add
//		style  beam
//		thinkfade  out
//		size	"0 2"
//		tps    4.0
//	}
//	think { kill }
//}

particle bullet
{
	init
	{
		image  "sfx/weapons/bullet1"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
//		child  muzzle_rifle
		child  muzzle_rifle_2D
		size   "40 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle bullet-smg
{
	init
	{
		image  "sfx/weapons/bullet1"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		child  muzzle_gun
		size   "20 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle bullet-hmg
{
	init
	{
		image  "sfx/weapons/bullet1"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		child  muzzle_hmg
		size   "40 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle needler-heavy
{
	init
	{
		image  "sfx/weapons/needle-heavy"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		size   "40 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle needler-small
{
	init
	{
		image  "sfx/weapons/needle-heavy"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		size   "20 20"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle bullet-shotgun
{
	init
	{
		image  "sfx/weapons/bullet1"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		size   "30 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle bullet_sniper
{
	init
	{
		image  "sfx/weapons/bullet1"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		child  muzzle_sniper
		size   "70 40"
		lightcolor "0.5 0.3 0.2"
		lightintensity 0.2
	}
}

particle bulletImpact
{
	init
	{
//		image  "sfx/smoke"
//		blend  blend
//		style  facing
//		thinkfade  sin		// fade the think function with a sinus function
//		size   "20 20"		// set the size vector to 20x20

//		push   *v			// push velocity vector on the stack
//		mul    float 5.0	// scalar multiple velocity vector
//		kpop   *v			// write it back into the particle structure (but keep it on the stack)
//		add    *s			// add the current position (v + s)
//		pop    *s			// write it back into the particle structure and remove from stack
		tps    1.0			// think per seconds to 1

		push   int 20		// push 20 to the stack
		nspawn bulletFragment	// use the 20 from stack and spawn that many particles
		spawn  bulletFlash
	}
	run
	{
		push *color			// push the color onto the stack
		mul  float 0.5		// scalar multiply with 0.5
		pop  *color			// write it back into the particle structure and remove from stack
	}
	// this is an impact particle - need to be explicitly killed
	think { kill }
}

particle bulletFragment
{
	init
	{
		image  "sfx/spark"
		blend  add
		style  facing
		thinkfade  out		// fade the thinkfunction out
		size   "2 2"

		a		"0 0 -100"

		push   *v			// get velocity onto the stack
		rand   float 28.0	// get a random value between 0 and 28
		add    float 3.0	// add a value onto the random value to ensure a minimum velocity
		mul    #			// multiply the value with the current stack value (velocity)
		crand  vector "15 15 15" // get a random vector between -15 and 15
		add    #			// Add the value to the current stack value (velocity)
		pop    *v			// write it back into particle structure and remove it from the stack

		crand  vector "5 5 5"	// get a random value between -5 and 5
		add    *s			// add the value of s to the current stack value (the random value)
		pop    *s			// write it into particle structure and remove it from the stack

		rand   float 1.5	// get a random value between 0 and 1.3
		add    float 1.4	// make sure we have a minimum
		pop    *tps			// write the into think per second particle structure and remove it from the stack
	}
	// this is spawned from an impact particle - need to be explicitly killed
	think { kill }
}

particle bulletFlash
{
	init
	{
		image		"sfx/explosions/flashbang"
		blend		add
		style		facing
		framefade	out
		size		"20 20"
		tps		10
		v			"0 0 0"
		life		0.5
	}
	think { kill }
}

// ==================
// FLAMETHROWER EFFECTS
// ==================

particle flameThrower
{
	init
	{
		spawn	fireBall
		lightcolor "1 0.4 0.4"
		lightintensity 0.1
	}
}


particle fireBall
{
	init
	{
		image  "sfx/explosions/explosion"
		blend  add
		thinkfade out
		style  facing
		tps    1
	}
	run
	{
		// this lets the size gets bigger the longer the particle is active
		push   vector "80 80 0"		// push the given vector onto the stack
		mul    *t					// multiple with current stack vector with the values from particle structure t (time)
		add    vector "10 10 0"		// add the vector to the current stack values (ensure at least a minimum value of the given vector)
		pop    *size				// write the value into the size particle structure
	}
	// no kill needed - this is a shooting particle and is automatically freed in the local entity code
	think   { thinkfade out }
}

particle fireImpact
{
	init
	{
		image  "sfx/explosions/explosion"
		blend  add
		style  facing
		size   "50 50"
		lightcolor "1 0.4 0.4"
		thinkfade  out
		tps    1.25
	}
	run
	{
		// this lets the size gets bigger the longer the particle is active
		push   pos "80 80"	// push the given vector onto the stack
		mul    *t				// multiple with current stack vector with the values from particle structure t (time)
		add    pos "40 40"		// add the vector to the current stack values (ensure at least a minimum value of the given vector)
		pop    *size			// write the value into the size particle structure
	}
	// this is an impact particle - need to be explicitly killed
	think { kill }
}

// ==================
// ROCKET LAUNCHER EFFECTS
// ==================

particle rocket
{
	init
	{
		model  "weapons/rpg2/rocket"
		tps    40.0
		color  ".5 .5 .5 1"
		spawn rocket_muzzle
	}
	think
	{
		// these particles are killed in their think functions
		push   int 6
		nspawn rocketSmoke
		spawn rocketFire
		spawn rocketFlame
	}
}

particle rocketSmoke
{
	init
	{
		frame 0
		endframe 3
		image "+sfx/smoke/smoke_"
		blend  blend
		style  facing
		thinkfade  out
		rand   float 0.5
		add    float 0.2
		pop    *tps
		crand  vector "1 1 1"
		add    *s
		pop    *s
		v      "0 0 10"
	}
	run
	{
		push   pos "10 10"
		mul    *t
		add    pos "5 5"
		pop    *size

		// change the position a little bit randomly
		crand  vector "0.5 0.5 0.5"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack
	}
	think { kill }
}

particle rocketFire
{
	init
	{
		image  "sfx/weapons/rocketfire"
		blend  add
		style  facing
		thinkfade  saw
		v      "0 0 0"
		size   "15 15"
		tps    4
		lightcolor "3.0 1.0 0.2"
		lightintensity 0.3
	}
	run
	{
//		push pos "1 1"
//		push *t
//		mul  float 16.0
//		sin  #
//		mul  #
// 		add  pos "10 10"
//		pop  *size

		push   pos "8 8"
		mul    *t
		sub    pos "10 10"
		pop    *size

		// change the position a little bit randomly
		crand  vector "0.5 0.5 0.5"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack
	}
	think { kill }
}

particle rocketFlame
{
	init
	{
		image  "sfx/fireball"
		blend  add
		style  facing
		thinkfade  out
		v      "0 0 0"
		size   "10 10"
		tps    4
	}
	run
	{

		push   *color
		mul    float .2
		pop    *color

		// change the position a little bit randomly
		crand  vector "0.5 0.5 0.5"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack

	}
	think { kill }
}

particle rocket_inc
{
	init
	{
		model  "weapons/rpg2/rocket_inc"
		color  ".5 .5 .5 1"
		tps    40.0
	}
	think
	{
		spawn rocketSmoke
		spawn rocketFire
	}
}

particle rocket_hybrid
{
	init
	{
		model  "weapons/rpg2/rocket_hbr"
		tps    40.0
		color  ".5 .5 .5 1"
		spawn rocket_muzzle
	}
	think
	{
		// these particles are killed in their think functions
		push   int 6
		nspawn rocketSmoke
		spawn rocketFire
		spawn rocketFlame
	}
}

// "particle beam weapon" particle
particle rocket_particle
{
	init
	{
		model  "weapons/rpg2/rocket"
		color  ".5 .5 .5 1"
		tps    40.0
	}
	think
	{
		spawn rocketSmoke
		spawn rocketFire
	}
}


// ==================
// LASER EFFECTS
// ==================


particle laserFrizzledImpact
{
	// TODO:
	init { kill }
}

particle laserFrizzledBeam
{
	init
	{
		image	"sfx/lightningscroll"
		blend	one
		style	beam
		scale	"10.0 10.0 10.0"
		tps	1.5
		size	"30.0 30.0"
		scroll_s -2.5
	}
	think { kill }
}

particle laserBeamSmall
{
	init
	{
		image  "sfx/weapons/laserbeam_b"
		blend  add
		style  beam
		thinkfade  out
		tps    1
		size	"0 7"
		child  muzzle_laser
	}
	think { kill }
}

particle laserPulseSmall
{
	init
	{
		image  "sfx/laserpulsesmall"
		tps    190
		style  axis
		blend  add
		size   "20 10"
		child  muzzle_laser
	}
}


particle laserBeam
{
	init
	{
		image  "sfx/weapons/laserbeam_b"
		blend  add
		style  beam
		thinkfade  out
		tps    0.7
		size	"0 9"
		child  muzzle_laser
	}
	think { kill }
}

particle laserPulse
{
	init
	{
		image  "sfx/laserpulse"
		tps    190
		style  axis
		blend  add
		offset "0 -16 0"
		size   "50 10"
		child  muzzle_laser
		tps    0.8
	}
	think
	{
		push   pos "50 10"
		mul    *t
		add    pos "30 0"
		pop    *size
	}
}

// particle laserPulse
// {
//	init
//	{
//		image  "sfx/weapons/laserbeam_b"
//		blend  add
//		style  beam
//		thinkfade  sin
//		tps    6.0
//		size	"0 2.2"
//	}
//	think { kill }
// }

particle laserPulseWhite
{
	init
	{
		image  "sfx/weapons/laserbeam_white"
		blend  add
		style  beam
		thinkfade  sin
		tps    6.0
		size	"0 2.2"
	}
	think { kill }
}

particle laserOverload
{
	init
	{
		image  "sfx/weapons/bullet"
		blend  add
		style  beam
		thinkfade  sin
		tps    2.0
		size	"0 2.7"
	}
	think { kill }
}

particle laserImpact2
{
	init
	{
		image  "sfx/weapons/lasermuzzle"
		blend  add
		style  facing
		thinkfade  sin
		size   "20 20"

		push   *v
		mul    float 5.0
		kpop   *v
		add    *s
		pop    *s
		tps    1.0

//		push   int 20
//		nspawn laserSpark
	}
	run
	{
		push *color
		mul  float 0.5
		pop  *color
	}
	think { kill }
}

particle laserImpact
{
	init
	{
		image  "sfx/weapons/lasermuzzle"
		blend  add
		style  facing
		thinkfade  sin
		size   "20 20"

		tps    1.0

//		push   int 20
//		nspawn laserSpark
	}
	run
	{
		push *color
		mul  float 0.5
		pop  *color
	}
	think { kill }
}

particle laserImpactSmall
{
	init
	{
		image  "sfx/weapons/lasermuzzle"
		blend  add
		style  facing
		thinkfade  sin
		size   "15 15"

		tps    1.0

//		push   int 20
//		nspawn laserSpark
	}
	run
	{
		push *color
		mul  float 0.5
		pop  *color
	}
	think { kill }
}

particle laserSparkSmall
{
	init
	{
		image  "sfx/laserimpact_small"
		blend  add
		style  facing
		thinkfade  out
		size   "20 20"

		push   *v
		rand   float 8.0
		add    float 3.0
		mul    #
		crand  vector "10 10 10"
		add    #
		pop    *v

		crand  vector "5 5 5"
		add    *s
		pop    *s

		rand   float 1.3
		add    float 1.2
		pop    *tps
		lightcolor "0.3 0.3 0.3"
		lightintensity 0.01
	}
	think { kill }
}

particle laserSpark
{
	init
	{
		image  "sfx/laserimpact"
		blend  add
		style  facing
		thinkfade  out
		size   "20 20"

		push   *v
		rand   float 8.0
		add    float 3.0
		mul    #
		crand  vector "15 15 15"
		add    #
		pop    *v

		crand  vector "5 5 5"
		add    *s
		pop    *s

		rand   float 1.3
		add    float 1.2
		pop    *tps
		lightcolor "1.0 0.3 0.3"
		lightintensity 0.1
	}
	think { kill }
}


// ==================
// PLASMA EFFECTS
// ==================

particle plasmaMiniPulse
{
	init
	{
		image  "sfx/weapons/plasmapulse"
		blend  add
		style  axis
//		child  plasmaMiniPulseBall
		offset "0 -16 0"
		spawn muzzle_plasma
		lightcolor "0 0.5 1.5"
		lightintensity 0.1
	}
	run
	{
		push pos "1 1"
		push *t
		mul  float 16.0
		sin  #
		mul  #
		add  pos "44 20"
		pop  *size
//		spawn plasmaMiniTrail
	}
}

particle plasmaMiniTrail
{
	init
	{
		image  "sfx/weapons/plasmaimpact_03"
		blend  add
		style  facing
		thinkfade  out
		rand   float 0.5
		add    float 0.3
		pop    *tps
		crand  vector "1 1 1"
		add    *s
		pop    *s
		v		"0 0 -2.5"
	}
	run
	{
		push   pos "5 5"
		mul    *t
		add    pos "10 10"
		pop    *size

		// change the position a little bit randomly
		crand  vector "0.2 0.2 0.2"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack
	}
	think { kill }
}

particle plasmaMiniPulseBall
{
	init
	{
		image  "sfx/weapons/plasmaimpact_00"
		blend  add
		style  facing
		offset "0 0 0"
		color  "1 1 1 0.5"
		size   "8 8"
		lightcolor "0.3 0.3 3.0"
		lightintensity 0.1
	}
}

particle plasmaPulse
 {
	init
	{
		image  "sfx/weapons/plasmapulse"
		blend  add
		style  axis
		offset "0 0 0"
//		child plasmaPulseBall
		spawn muzzle_plasma
		lightcolor "0 1.0 3.0"
		lightintensity 0.2
	}
	run
	{
		push pos "1 1"
		push *t
		mul  float 16.0
		sin  #
		mul  #
		add  pos "80 30"
		pop  *size
//		spawn plasmaTrail
	}
 }

particle plasmaTrail
{
	init
	{
		image  "sfx/weapons/plasmaimpact_02"
		blend  add
		style  facing
		thinkfade  saw
		v      "0 0 0"
		size   "15 15"
		tps    4
	}
	run
	{
		push   pos "8 8"
		mul    *t
		sub    pos "10 10"
		pop    *size

		// change the position a little bit randomly
		crand  vector "0.5 0.5 0.5"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack
	}
	think { kill }
}

particle plasmaPulseBall
{
	init
	{
		image  "sfx/weapons/plasmaimpact_00"
		blend  add
		style  facing
		offset "0 0 0"
		color  "1 1 1 0.5"
		size   "15 15"
		lightcolor "0.3 1.0 3.0"
		lightintensity 0.1
	}
}

//---------------

particle plasmaMiniBall
{
	init
	{
		image  "sfx/plasmaball"
		blend  add
		style  facing
		lightcolor "0.3 1.0 3.0"
	}
	run
	{
		push pos "1 1"
		push *t
		mul  float 16.0
		sin  #
		mul  #
		add  pos "4 4"
		pop  *size
	}
}

particle plasmaBall
{
	init
	{
		image  "sfx/plasmaball"
		blend  add
		style  facing
		lightcolor "0.3 1.0 3.0"
		lightintensity 0.1
	}
	run
	{
		push pos "1.2 1.2"
		push *t
		mul  float 12.0
		sin  #
		mul  #
		add  pos "5.5 5.5"
		pop  *size
	}
}

particle plasmaBallCore
{
	init
	{
		frame			0
		endframe		9
		image			"+sfx/weapons/plasmashot_"
		blend			blend
		style			facing
		framefade		none
		size			"200 200"
		fps				24.0
		push			*v
		mul				float 30.0
		add				*s
		pop				*s
		v				"0 0 0"
		tps 				0.1
	}
	think { kill }
}

particle plasmaBigBall
{
	init
	{
		image  "sfx/weapons/plasmaball-core"
		blend  add
		style  facing
		offset "0 0 0"
		tps    60
		child plasmaBallCore
		spawn muzzle_plasma
		lightcolor "0 1.0 3.0"
		lightintensity 0.2
	}
	think
	{
		spawn plasmaBallTrail
		push pos "1 1"
		push *t
		mul  float 16.0
		sin  #
		mul  #
		add  pos "40 40"
		pop  *size
	}
}

particle plasmaBallTrail
{
	init
	{
		image  "sfx/weapons/plasmaball-core"
		blend  add
		style  axis
		thinkfade  out
		angles "90 0 0"
		v      "0 0 0"
		size   "30 30"
		tps    4
	}
	run
	{

		push   *color
		mul    float .2
		pop    *color

	}
	think { kill }
}

// particle plasmaBigBall
// {
// 	init
// 	{
// 		image	"sfx/plasmaball"
// 		blend	add
// 		style	facing
// 		lightcolor "0.3 1.0 3.0"
// 		lightintensity 0.2
// 	}
// 	run
// 	{
// 		push	pos	"1.5 1.5"
// 		push	*t
// 		mul	float	6.0
// 		sin	#
// 		mul	#
// 		add	pos	"12 12"
// 		pop	*size
// 	}
// }

particle plasmaImpactgGlow
{
	init
	{
		image  "sfx/corona_b"
		blend  add
		style  facing
		thinkfade  out
		life   2
		size   "25 25"
	}
	think { kill }
}


// particle plasmaImpactCharged
// {
// 	init
// 	{
// 		push   int 10
// 		nspawn plasmaParticleCharged
// 		image  "sfx/plasmaball"
// 		blend  add
// 		style  rotated
// 		thinkfade  out
// 		tps    2.0
// 	}
// 	run
// 	{
// 		push pos "10 10"
// 		push *t
// 		mul  float 10.0
// 		sin  #
// 		mul  #
// 		add  pos "30 30"
// 		pop  *size
// 	}
// 	think { kill }
// }

particle plasmaParticleCharged
{
	init
	{
		image  "sfx/plasmadust"
		blend  add
		style  facing
		tps    2.0
		size   "12 12"
		thinkfade  out

		a      "0 0 -50"
		crand  vector "25 25 25"
		add    vector "0 0 25"
		pop    *v

		crand  vector "4 4 4"
		add    *s
		pop    *s
	}
	think { kill }
}

particle plasmaContinuous
{
	init
	{
		image  "sfx/weapons/plasmabeam"
		blend  add
		style  beam
		tps    2.0
		lightcolor "0.3 1.0 3.0"
		lightintensity 0.1
		scroll_s -2.5
	}
	run
	{
		rand float 5.0
		add  float 3.0
		pop  *size.2
	}
	think { kill }
}

particle plasmaImpact
{
	init
	{
		push   int 6
		nspawn plasmaParticle
		image  "sfx/plasmaball"
		blend  add
		style  rotated
		thinkfade  out
		tps    2.0
	}
	run
	{
		push pos "5 5"
		push *t
		mul  float 10.0
		sin  #
		mul  #
		add  pos "15 15"
		pop  *size
	}
	think { kill }
}

particle plasmaParticle
{
	init
	{
		image  "sfx/plasmadust"
		blend  add
		style  facing
		tps    2.2
		size   "7 7"
		thinkfade  out

		a      "0 0 -50"
		crand  vector "20 20 20"
		add    vector "0 0 20"
		pop    *v

		crand  vector "2 2 2"
		add    *s
		pop    *s
	}
	think { kill }
}

particle plasmaBigExplosion
{
	init
	{
		spawn  plasma_explosion
		push   int 25
		nspawn plasmaBigSplash
		push   int 10
		nspawn smokePlasmatrail
		kill
	}
}

particle plasmaBigImpact
{
	init
	{
		push   int 30
		nspawn plasmaBigSplash
		kill
	}
}

particle plasmaBigSplash
{
	init
	{
		image  "sfx/plasmaball"
		blend  add
		style  facing
		thinkfade  out

		push   pos "2 2"
		rand   float 5.0
		mul    #
		add    pos "2 2"
		pop    *size

		a      "0 0 -250"
		crand  vector "100 100 100"
		add    vector "0 0 100"
		pop    *v

		crand  vector "10 10 10"
		add    *s
		pop    *s

		rand   float 1.0
		add    float 1.0
		pop    *tps

		push   int 2
		nspawn plasmaParticleRandom

		lightcolor "0.3 1.0 3.0"
		lightintensity 0.2
	}
	think { kill }
}

particle plasmaParticleRandom
{
	init
	{
		image  "sfx/plasmadust"
		blend  add
		style  facing
		thinkfade  out

		push   pos "2 2"
		rand   float 2.5
		mul    #
		add    pos "0.5 0.5"
		pop    *size

		a      "0 0 -350"
		push   *v
		crand  vector "30 30 30"
		add    #
		pop    *v

		crand  vector "5 5 5"
		add    *s
		pop    *s
		tps   4.0
		life  0.8
	}
	think { kill }
}


// =====================
// PARTICLE-BEAM EFFECTS
// =====================


particle partLaser
{
	init
	{
		image  "sfx/particlelaser"
		tps    60
		style  axis
		blend  add
		a      "90 0 0"
		offset "0 -16 0"
		size   "80 5"
	}
	think
	{
//		spawn partlaserTrail
		push   int 20
		nspawn partTail
	}
}

particle partTail
{
	init
	{
		image  "sfx/weapons/muzzleptl"
		blend  add
		style  facing
		thinkfade  out
		v      "0 0 0"
		size   "10 10"
		tps    0.5

	}
	run
	{

		push   *color
		mul    float .2
		pop    *color

		// change the position a little bit randomly
		crand  vector "1 1 1"	// push a value between -1 and 1 onto the stack
		add    *s				// add the current location
		pop    *s				// write the stack value back into the particle structure location and remove it from the stack

	}
	think { kill }
}

particle partlaserTrail
{
	init
	{
		image  "sfx/particlelaser"
		blend  add
		style  axis
		thinkfade  out
		v      "0 0 0"
		tps    10
		size   "40 10"
	}
	run
	{

		push   *color
		mul    float .2
		pop    *color

	}
	think { kill }
}

particle pbeamMiniBeam
{
	init
	{
		image  "sfx/weapons/particlebeam"
		blend  add
		style  beam
		tps    10.0
		lightcolor "0.5 0.9 0.5"
		lightintensity 0.1
		spawn muzzle_ptl
	}
	run
	{
		rand float 3.0
		add  float 4.0
		pop  *size.2
	}
	think { kill }
}

particle pbeamBeam
{
	init
	{
		image  "sfx/weapons/particlebeam"
		blend  add
		style  beam
		thinkfade  sin
		tps    10.0
		lightcolor "0.5 0.9 0.5"
		lightintensity -0.2
		spawn muzzle_ptl
//		spawn partLaser
	}
	run
	{
		push *t
		mul  float 8.0
		sin  #
		mul  float 3.0
		add  float 6.0
		pop  *size.2
	}
	think { kill }
}

particle pbeamBigBeam
{
	init
	{
		image  "sfx/weapons/particlebeam"
		blend  add
		style  beam
		thinkfade  sin
		tps    2.0
		lightcolor "0.5 0.9 0.5"
		lightintensity 0.2
		spawn muzzle_ptl
	}
	run
	{
		push *t
		mul  float 15.0
		sin  #
		mul  float 5.0
		add  float 8.0
		pop  *size.2
	}
	think { kill }
}

particle pbeamImpact
{
	init
	{
		push   int 22
		nspawn pbeamSplash
		image  "sfx/particleball"
		blend  add
		style  rotated
		thinkfade  out
		tps    2.0
	}
	run
	{
		push pos "10 10"
		push *t
		mul  float 10.0
		sin  #
		mul  #
		add  pos "20 20"
		pop  *size
	}
	think { kill }
}

particle pbeamSplash
{
	init
	{
		image  "sfx/greenball"
		blend  add
		style  facing
		thinkfade  out
		size   "3 3"

		crand  vector "30 30 30"
		pop    *v

		crand  vector "8 8 8"
		add    *s
		pop    *s

		rand   float 3.0
		add    float 1.5
		pop    *tps
	}
	think { kill }
}

particle pbeamExplosion_1
{
	init
	{
		frame 1
		endframe 7
		image "+sfx/explosions/greenplas_"
		blend blend
		style facing
		framefade in
		size  "70 70"
		fps   6.0
		tps   0.75
		lightcolor "0.5 0.9 0.5"
		lightintensity 0.2
	}
	think { kill }
}

particle pbeamExplosion_2
{
	init
	{
		frame 0
		endframe 7
		image "+sfx/explosions/greenplas_"
		blend blend
		style facing
		framefade out
		size  "70 70"
		fps   6.0
		tps   0.75
		lightcolor "0.5 0.9 0.5"
		lightintensity 0.2
	}
	think { kill }
}

particle pbeamBigImpact
{
	init
	{
		spawn  pbeamExplosion_1
		spawn  pbeamExplosion_2
		push   int 30
		nspawn pbeamBigSplash
		kill
	}
}

particle pbeamBigSplash
{
	init
	{
		image  "sfx/greenball"
		blend  add
		style  facing
		thinkfade  out
		size   "4 4"

		crand  vector "50 50 50"
		pop    *v

		crand  vector "15 15 15"
		add    *s
		pop    *s

		rand   float 1.6
		add    float 1.5
		pop    *tps
		lightcolor "0.5 0.9 0.5"
		lightintensity 0.1
	}
	think { kill }
}


// ==================
// GRENADE LAUNCHER EFFECTS
// ==================

particle grenl_ammo_ptl
{
	init
	{
		model  "weapons/grenl/grenl_clip2"
		color  ".5 .5 .5 1"
		skin	"0"
		tps    40.0
	}
	think
	{
		spawn glSmoke
	}
}

particle grenl_fle_ammo
{
	init
	{
		model  "weapons/grenl/grenl_clip2"
		skin	"1"
		color  ".5 .5 .5 1"
		tps    40.0
	}
	think
	{
		spawn glSmoke
	}
}

particle grenl_ic_ammo
{
	init
	{
		model  "weapons/grenl/grenl_clip2"
		skin	"2"
		color  ".5 .5 .5 1"
		tps    40.0
	}
	think
	{
		spawn glSmoke
	}
}

particle grenl_plasma_ammo_ptl
{
	init
	{
		model  "weapons/grenl/grenl_clip2"
		skin	"3"
		color  ".5 .5 .5 1"
		tps    40.0
	}
	think
	{
		spawn glSmoke
	}
}

particle glSmoke
{
	init
	{
		image  "sfx/smoke/smoke_01"
		blend  blend
		style  facing
		thinkfade  out
		tps    0.8
		color  ".5 .5 .5 1"
		v      "0 0 5"			// let the smoketrail get higher as time advances
		a      "0 0 0"

		// change the position a little bit randomly
		crand  vector "3 3 3"
		add    *s
		pop    *s
	}
	// run is executed more often as think (every frame - and think execution depends on the tps value)
	run
	{
		// change the size of the smoketrail (make it bigger as time advances)
		push   pos "15 15"		// push the vector onto the stack
		mul    *t				// multiply stack value with the time value from the particle
		add    pos "10 10"		// add another position 2d vector to the current stack value
		pop    *size			// write the vector back into the particle size value

		// change the color of the smoketrail (more more transparent as time advances)
		push   *color	// get the color onto the stack
		mul    float .5	// scalar multiple with 0.5 (to make it more transparent)
		pop    *color	// write the stack value back into particle structure color and remove from stack

	}
	think { kill }
}

// ==================
// GRENADE EFFECTS
// ==================

particle medikit_ptl
{
	init
	{
		model  "weapons/medikit/medikit"
		color  ".5 .5 .5 1"
	}
}

particle irgoggles_ptl
{
	init
	{
		model  "weapons/irgoggles/irgoggles"
		color  ".5 .5 .5 1"
	}
}

particle fraggren
{
	init
	{
		model  "weapons/fraggren/fraggren"
		color  ".5 .5 .5 1"
	}
}

particle incgren
{
	init
	{
		model  "weapons/incgren/incgren"
		color  ".5 .5 .5 1"
	}
}

particle flashgren
{
	init
	{
		model  "weapons/flashbang/flashbang"
		color  ".5 .5 .5 1"
	}
}

particle smokegren
{
	init
	{
		model  "weapons/smokegren/smokegren"
		color  ".5 .5 .5 1"
	}
}

particle stungren
{
	init
	{
		model  "weapons/stungren/stungren"
		color  ".5 .5 .5 1"
	}
}

particle stungren_alien
{
	init
	{
		model  "weapons/stungren_alien/stungren"
		color  ".5 .5 .5 1"
	}
}

particle plasmagren
{
	init
	{
		model  "weapons/plasmagren/plasmagren"
		color  ".5 .5 .5 1"
	}
}


// ==================
// KNIFE EFFECTS
// ==================

particle knife_ptl
{
	init
	{
		model  "weapons/knife/knife"
		color  ".5 .5 .5 1"
		omega  "-800 0 0"
		angles "90 0 0"
	}
}

// TODO it looks like there is no references to that item
particle kerrblade_ptl
{
	init
	{
		model  "weapons/kerrblade/kerrblade"
		color  ".5 .5 .5 1"
		omega  "-800 0 0"
		angles "90 0 0"
	}
}

// TODO it looks like there is no references to that item
particle plasblade_ptl
{
	init
	{
		model  "weapons/plasblade/plasblade"
		color  ".5 .5 .5 1"
		omega  "-800 0 0"
		angles "90 0 0"
	}
}

// FIXME: New particle name
particle fwl
{
	init
	{
		model  "weapons/rpg2/rocket"
		color  ".5 .5 .5 1"
		tps    80.0
	}
	think
	{
		spawn Firez
		spawn Smokez
		spawn Firez
		spawn Smokez
		spawn Firez
		spawn Firez
	}
}

// FIXME: New particle name
particle Smokez
{
	init
	{
		image  "sfx/plasmaball"
		blend  add
		style  facing
		thinkfade  saw
		tps  50
		color  ".5 .5 .5 1"
		v      "0 0 20"
	}
	run
	{
		push   pos "15 15"
		mul    *t
		add    pos "10 10"
		pop    *size
		push   *color
		mul    float .5
		pop    *color

		crand  vector "1 1 1"
		add    *s
		pop    *s
	}
	think { kill }
}

// FIXME: New particle name
particle Firez
{
	init
	{
		image  "sfx/plasmaball"
		blend  add
		style  facing
		thinkfade  out
		tps  18
		color  ".5 .5 .5 1"

		push   *v
		mul    float 0.8
		pop   *v
	}
	run
	{
		push   pos "10 10"
		mul    *t
		add    pos "5 5"
		pop    *size
		push   *color
		mul    float .5
		pop    *color

		crand  vector "0.5 0.5 0.5"
		add    *s
		pop    *s
	}
	think { kill }
}

// FIXME: New particle name
particle incz
{
	init
	{
		model  "weapons/rpg2/rocket_inc"
		color  ".5 .5 .5 1"
		tps    80.0
	}
	think
	{
		spawn Smokez
		spawn Firez
	}
}

// ==================
// Muzzle Flashes
// ==================

particle muzzle_gun
{
	init
	{

		spawn  muzzle_gun_front
//		spawn  muzzle_gun_side
//		spawn  shell
		kill
	}
}


particle muzzle_gun_front
{
	init
	{
		image  "sfx/weapons/muzzle_smg_front"
		blend  add
		style  facing
		thinkfade  out
		life   0.04
		tps    1
		size   "20 18"
		lightcolor "3.0 1.5 0.5"
		lightintensity 0.1
	}
	think { kill }
}

particle muzzle_gun_side
{
	init
	{
		image  "sfx/weapons/muzzlebulletside"
		blend  add
		style  facing
		thinkfade  out
		tps    1
		life   0.04
		size   "15 5"
		offset "0 7 0"
	}
	think { kill }
}

particle muzzle_rifle
{
	init
	{
		spawn  muzzle_round
		spawn  muzzle_rifle_front
//		spawn  muzzle_side
//		spawn  shell
		kill
	}
}

// 2d muzzles are temp until the ptl bugs are fixed

particle muzzle_rifle_2D
{
	init
	{
		spawn  muzzle_round
		spawn  muzzle_rifle_front
		kill
	}
}

particle muzzle_round
{
	init
	{
		image  "sfx/explosions/explosion"
		blend  add
		style  facing
		thinkfade  out
		life   0.07
		tps    1
		size   "10 10"
		lightcolor "3.0 1.5 0.5"
		lightintensity 0.1
	}
	think { kill }
}

particle muzzle_rifle_front
{
	init
	{
		image  "sfx/weapons/muzzle_rifle_front"
		blend  add
		style  facing
		thinkfade  out
		life   0.07
		tps    1
		size   "15 15"
	}
	think { kill }
}

particle muzzle_side
{
	init
	{
		image  "sfx/weapons/muzzlebulletside"
		blend  add
		style  axis
		thinkfade  out
		life   0.07
		tps    1
		size   "40 10"
		offset "0 7 0"
	}
	think { kill }
}

particle muzzle_hmg
{
	init
	{
		spawn  muzzle_hmg_front
//		spawn  muzzle_hmg_side
//		spawn  shell
		push   int 2
		kill
	}
}

particle muzzle_hmg_front
{
	init
	{
		image  "sfx/weapons/muzzle_hmg_front"
		blend  add
		style  facing
		thinkfade  out
		life   0.07
		tps    1
		size   "20 20"
		lightcolor "3.0 1.5 0.5"
		lightintensity 0.1
	}
	think { kill }
}

particle muzzle_hmg_side
{
	init
	{
		image  "sfx/weapons/muzzlebulletside"
		blend  add
		style  facing
//		angles "50 0 0"
		thinkfade  out
		life   0.07
		tps    1
		size   "40 10"
		offset "0 7 0"
	}
	think { kill }
}

particle muzzle_sniper
{
	init
	{
		spawn  muzzle_sniper_1
		spawn  muzzle_sniper_glow
//		spawn  shell-sniper
		kill
	}
}

particle muzzle_sniper_1
{
	init
	{
		image  "sfx/explosions/explosion"
		blend  add
		style  facing
		thinkfade  out
		life   0.1
		tps    1
		size   "20 20"
		offset "5 0 0"
		lightcolor "2.0 1.5 0.5"
		lightintensity 0.2
	}
	run
	{

		crand  vector "1 0 0"
		add    *s
		pop    *s

	}
	think { kill }
}

particle muzzle_sniper_glow
{
	init
	{
		image  "sfx/corona_y"
		blend  add
		style  facing
		thinkfade  out
		life   0.1
		tps    1
		size   "30 30"
		offset "5 0 0"
	}
	run
	{

		crand  vector "1 1 1"
		add    *s
		pop    *s

	}
	think { kill }
}

particle muzzle_laser
{
	init
	{
		spawn  muzzle_laser_round
		push   int 2
//		spawn  muzzle_laser_side
		push   int 2
		kill
	}
}

particle muzzle_laser_round
{
	init
	{
		image  "sfx/weapons/lasermuzzle"
		blend  add
		style  facing
		thinkfade  out
		life   0.07
		tps    1
		size   "30 30"
		offset "0 0 0"
		v      "0 0 0"
		lightcolor "2.0 1.0 0.5"
		lightintensity 0.2
	}
	run
	{

		crand  vector "1 0 0"
		add    *s
		pop    *s

	}
	think { kill }
}

particle muzzle_laser_side
{
	init
	{
		image  "sfx/weapons/muzzlelaserside"
		blend  add
		style  rotated
		angles "0 0 0"
		thinkfade  out
		life   0.07
		tps    1
		size   "40 10"
		offset "0 9 0"
		v      "0 0 0"
	}
	think { kill }
}

particle muzzle_plasma
{
	init
	{
		spawn  muzzle_plasma_round
		push   int 2
//		spawn  muzzle_plasma_side
		push   int 2
		spawn  muzzle_plasma_spiral
		push   int 2
		kill
	}
}

particle muzzle_plasma_round
{
	init
	{
		image  "sfx/weapons/plasmaimpact_01"
		blend  add
		style  facing
		thinkfade  out
		life   0.07
		tps    1
		size   "30 30"
		offset "0 0 0"
		v      "0 0 0"
		lightcolor "0 1.0 3.0"
		lightintensity 0.2
	}
	run
	{

		crand  vector "1 0 0"
		add    *s
		pop    *s

	}
	think { kill }
}

particle muzzle_plasma_side
{
	init
	{
		image  "sfx/weapons/muzzleplasmaside"
		blend  add
		style  rotated
		angles "0 0 0"
		thinkfade  out
		life   0.07
		tps    1
		size   "40 10"
		offset "0 9 0"
		v      "0 0 0"
	}
	think { kill }
}

particle muzzle_plasma_spiral
{
	init
	{
		image  "sfx/weapons/muzzleplasmaspiral"
		blend  add
		style  facing
		thinkfade  out
		tps    4
		offset "0 0 0"
		v      "0 0 0"
		angles "0 90 0"
	}
	run
	{

		push   pos "40 40"
		mul    *t
		add    pos "10 10"
		pop    *size

		push   *color
		mul    float .7
		pop    *color

	}
	think { kill }
}


particle muzzle_ptl
{
	init
	{
//		spawn  muzzle_ptl_side
		push   int 2
		spawn  muzzle_ptl_cross
		push   int 2
		kill
	}
}


particle muzzle_ptl_side
{
	init
	{
		image  "sfx/weapons/muzzleptlside"
		blend  add
		style  rotated
		angles "0 0 0"
		thinkfade  out
		life   0.07
		tps    1
		size   "40 10"
		offset "0 9 0"
		v      "0 0 0"
	}
	think { kill }
}

particle muzzle_ptl_cross
{
	init
	{
		image  "sfx/weapons/muzzleptl"
		blend  add
		style  facing
		thinkfade  out
		tps    4
		offset "0 0 0"
		v      "0 0 0"
		angles "0 90 0"
		lightcolor "0 3.0 1.0"
		lightintensity 0.2
	}
	run
	{

		push   pos "0 0"
		mul    *t
		sub    pos "20 20"
		pop    *size

		push   *color
		mul    float .7
		pop    *color

	}
	think { kill }
}


particle rocket_muzzle
{
	init
	{
		image  "sfx/smoke_gren"
		blend  blend
		style  facing
		thinkfade  sin		// fade the think function with a sinus function
		size   "20 20"		// set the size vector to 20x20

		push   *v			// push velocity vector on the stack
		mul    float 5.0	// scalar multiple velocity vector
		kpop   *v			// write it back into the particle structure (but keep it on the stack)
		add    *s			// add the current position (v + s)
		pop    *s			// write it back into the particle structure and remove from stack
		tps    1.0			// think per seconds to 1

		lightcolor "3.0 1.5 0.5"
		lightintensity 0.3
		push   int 20		// push 20 to the stack
		nspawn rocket_muzzle_smoke	// use the 20 from stack and spawn that many particles
		push   int 20		// push 20 to the stack
		nspawn rocket_muzzle_smoke_2	// use the 20 from stack and spawn that many particles
	}
	think { kill }
}

particle rocket_muzzle_smoke
{
	init
	{
		image  "sfx/smoke_gren"
		blend  blend
		style  facing
		thinkfade  out		// fade the thinkfunction out
		size   "15 15"

		push   *v			// get velocity onto the stack
		rand   float 25.0	// get a random value
		add    float 5.0	// add a value onto the random value to ensure a minimum velocity
		mul    #			// multiply the value with the current stack value (velocity)
		crand  vector "6 6 6" // get a random vector
		add    #			// Add the value to the current stack value (velocity)
		pop    *v			// write it back into particle structure and remove it from the stack

		crand  vector "10 10 10"	// get a random value
		add    *s			// add the value of s to the current stack value (the random value)
		pop    *s			// write it into particle structure and remove it from the stack

		rand   float 0.3
		add    float 0.2	// make sure we have a minimum
		pop    *tps			// write the into think per second particle structure and remove it from the stack
	}
	think { kill }
}

particle rocket_muzzle_smoke_2
{
	init
	{
		image  "sfx/smoke_01"
		blend  blend
		style  facing
		thinkfade  out		// fade the thinkfunction out
		size   "15 15"

		push   *v			// get velocity onto the stack
		rand   float 25.0	// get a random value
		add    float 5.0	// add a value onto the random value to ensure a minimum velocity
		mul    #			// multiply the value with the current stack value (velocity)
		crand  vector "5 5 5" // get a random vector
		add    #			// Add the value to the current stack value (velocity)
		pop    *v			// write it back into particle structure and remove it from the stack

		crand  vector "5 5 5"	// get a random value
		add    *s			// add the value of s to the current stack value (the random value)
		pop    *s			// write it into particle structure and remove it from the stack

		rand   float 1.8
		add    float 1.6	// make sure we have a minimum
		pop    *tps			// write the into think per second particle structure and remove it from the stack
	}
	think { kill }
}

/////////////////////
//   Hit Effects   //
/////////////////////

particle plasmaImpactCharged
{
	init
	{
		frame			0
		endframe		4
		image			"+sfx/weapons/plasmaimpact_"
		blend			blend
		style			facing
		framefade		none
		fps				15.0
		tps				3
		v				"0 0 0"
		offset				"0 0 5"
		size				"55 55"
		child				plasmaImpactgGlow

		push   int 10
		nspawn hitPlasmatrail
	}
	think { kill }
}

particle plasmaImpactChargedAnim_2
{
	init
	{
		frame			0
		endframe		4
		image			"+sfx/weapons/plasmaimpact_"
		blend			blend
		style			axis
		framefade		none
		fps				15.0
		tps				3
		v				"0 0 0"
		offset				"0 10 0"
		size				"55 55"
	}
	think { kill }
}

particle hitPlasmatrail
{
	init
	{
		push   int 2
		nspawn plasmaBigSplash
		bounce true
		kill
	}
}

particle hitPlasmaFire
{
	init
	{
		image  "sfx/weapons/plasmaball-core"
		blend  add
		style  facing
		thinkfade  out
		v      "0 0 0"
		a      "0 0 0"
		size   "8 8"
		tps    3
	}
	run
	{

		push   *color
		mul    float .2
		pop    *color

	}
	think { kill }
}
